options(width=90, xtable.comment = FALSE)
library(SSsimple)
library(rjson)
xpath_main_data <- Sys.getenv("PATH_MY_MAIN_DATA")
xpath_scrape <-
file.path(
xpath_main_data,
"spoonacular"
)
if(!dir.exists(xpath_scrape)) {
dir.create(xpath_scrape, recursive=TRUE)
}
############ PLEASE USE SPARINGLY -- COSTS ME $ -- You can acquire your own API
xAPIkey <- Sys.getenv("MY_SPOONACULAR_APIKEY")
xAPIkey
options(width=90, xtable.comment = FALSE)
library(SSsimple)
library(rjson)
xpath_main_data <- Sys.getenv("PATH_MY_MAIN_DATA")
xpath_scrape <-
file.path(
xpath_main_data,
"spoonacular"
)
if(!dir.exists(xpath_scrape)) {
dir.create(xpath_scrape, recursive=TRUE)
}
############ PLEASE USE SPARINGLY -- COSTS ME $ -- You can acquire your own API
xAPIkey <- Sys.getenv("MY_SPOONACULAR_APIKEY")
xAPIkey
xurl_gElevAPIbase <- "https://api.spoonacular.com/recipes/{id}/tasteWidget.json"
######## note that our counter corresponds to the location (row name) given in xlocs
ii <- 1
for(ii in 1:100) {
# xthis_loc <- xlocs[ ii, ] ; xthis_loc
xthis_url <-
paste0(
"https://api.spoonacular.com/recipes/",
ii,
"/tasteWidget.json",
"?apiKey=",
xAPIkey
)
### xthisJSON <- fromJSON(xthis_url)
xthisJSON <- readLines(con=xthis_url)
##### how do we name this file ????
#### here's an alternative -- build string directly from values
# xxn <- f_fun_latLon2fn(lat=xthis_loc[ "y" ], lon=xthis_loc[ "x" ]) ; xxn
#
# xtn_out <- paste0(ii, "__", xxn, "__googleGeoElevation.json")
# writeLines( xthisJSON, file.path(xpath_scrape, xtn_out) )
#
##### pause -- for paid services, this isn't critical, bu a good idea.
Sys.sleep(1)
# cat("Done getting location ID", ii, " -- at loc", unlist(xthis_loc), "\n" )
}
options(width=90, xtable.comment = FALSE)
library(SSsimple)
library(rjson)
xpath_main_data <- Sys.getenv("PATH_MY_MAIN_DATA")
xpath_scrape <-
file.path(
xpath_main_data,
"spoonacular"
)
if(!dir.exists(xpath_scrape)) {
dir.create(xpath_scrape, recursive=TRUE)
}
############ PLEASE USE SPARINGLY -- COSTS ME $ -- You can acquire your own API
xAPIkey <- Sys.getenv("MY_SPOONACULAR_APIKEY")
xAPIkey
xurl_gElevAPIbase <- "https://api.spoonacular.com/recipes/{id}/tasteWidget.json"
######## note that our counter corresponds to the location (row name) given in xlocs
ii <- 1
for(ii in 1:100) {
# xthis_loc <- xlocs[ ii, ] ; xthis_loc
xthis_url <-
paste0(
"https://api.spoonacular.com/recipes/",
ii,
"/tasteWidget.json",
"?apiKey=",
xAPIkey
)
### xthisJSON <- fromJSON(xthis_url)
xthisJSON <- readLines(con=xthis_url)
##### how do we name this file ????
#### here's an alternative -- build string directly from values
# xxn <- f_fun_latLon2fn(lat=xthis_loc[ "y" ], lon=xthis_loc[ "x" ]) ; xxn
#
xtn_out <- paste0(ii, "__spoonacular.json")
writeLines( xthisJSON, file.path(xpath_scrape, xtn_out) )
#
##### pause -- for paid services, this isn't critical, bu a good idea.
Sys.sleep(1)
# cat("Done getting location ID", ii, " -- at loc", unlist(xthis_loc), "\n" )
}
options(width=90, xtable.comment = FALSE)
library(SSsimple)
library(rjson)
xpath_main_data <- Sys.getenv("PATH_MY_MAIN_DATA")
xpath_scrape <-
file.path(
xpath_main_data,
"spoonacular"
)
if(!dir.exists(xpath_scrape)) {
dir.create(xpath_scrape, recursive=TRUE)
}
############ PLEASE USE SPARINGLY -- COSTS ME $ -- You can acquire your own API
xAPIkey <- Sys.getenv("MY_SPOONACULAR_APIKEY")
xAPIkey
xurl_gElevAPIbase <- "https://api.spoonacular.com/recipes/{id}/tasteWidget.json"
######## note that our counter corresponds to the location (row name) given in xlocs
ii <- 4582
for(ii in 4582:4640) {
# xthis_loc <- xlocs[ ii, ] ; xthis_loc
xthis_url <-
paste0(
"https://api.spoonacular.com/recipes/",
ii,
"/tasteWidget.json",
"?apiKey=",
xAPIkey
)
### xthisJSON <- fromJSON(xthis_url)
xthisJSON <- readLines(con=xthis_url)
##### how do we name this file ????
#### here's an alternative -- build string directly from values
# xxn <- f_fun_latLon2fn(lat=xthis_loc[ "y" ], lon=xthis_loc[ "x" ]) ; xxn
#
xtn_out <- paste0(ii, "__spoonacular.json")
writeLines( xthisJSON, file.path(xpath_scrape, xtn_out) )
#
##### pause -- for paid services, this isn't critical, bu a good idea.
Sys.sleep(1)
# cat("Done getting location ID", ii, " -- at loc", unlist(xthis_loc), "\n" )
}
warnings()
